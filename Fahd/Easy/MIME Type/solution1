#include <bits/stdc++.h>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
#define  ll endl;
string  low(string x){
    for(int i =0 ; i < x.size() ; i++){
        x[i] = tolower(x[i]);
    }
    return x;
}
int main()
{
    int n; // Number of elements which make up the association table.
    cin >> n; cin.ignore();
    int q; // Number Q of file names to be analyzed.
    cin >> q; cin.ignore();
    map<string  , string >m;
    map<string  ,int>mk;
    for (int i = 0; i < n; i++) {
        string ext; // file extension
        string mt; // MIME type.
        cin >> ext >> mt; cin.ignore();
        m[low(ext)] = mt;
        mk[low(ext)]++;
    }
    for (int i = 0; i < q; i++) {
        string fname;
        getline(cin , fname);
        bool temp = false ;
       int pos = fname.find_last_of(".");
       if(pos > -1){
           if(mk[low(fname.substr(pos+ 1))] >= 1) {
               cout << m[low(fname.substr(pos + 1))] << ll;
           }
           else cout <<"UNKNOWN"<<ll;
       }
       else{
           cout <<"UNKNOWN"<<ll;
       }
    }
}
