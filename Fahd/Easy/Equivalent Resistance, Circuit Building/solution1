/***
*  Author:
*
*         ██████|  /███\  |█   █|  █████\
*         █|       █   █  |█   █|  █    ██\
*         ██████|  █████   █████   █    ███|
*         █|       █   █  |█   █|  █    ██/
*         █|       █   █  |█   █|  █████/
*
***/
#include<bits/stdc++.h>
#define int long long
#define FAST ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define double long double
#define all(v)  v.begin(),v.end()
#define FAST ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define ll endl
#define forr(i , n) for(int i = 0 ; i < n ; i++)
#define forr1(i , n) for(int i = 1 ; i <= n ; i++)
#define pi pair<int,int>
#define pis     priority_queue<pi, vector<pi>, greater<pi> > s;
#define pig     priority_queue<pi>g;
#define pas     priority_queue<int, vector<int>, greater<int> > s;
#define pag     priority_queue<int>g;
#define vpi vector<pair<int,int>>
#define YES cout <<"YES"<<ll;
#define NO cout <<"NO"<<ll;
#define Yes cout <<"Yes"<<ll;
#define No cout <<"No"<<ll;
#define yes cout <<"yes"<<ll;
#define no cout <<"no"<<ll;
#define opz   std::plus<int>()
#define opn  std::minus<int>()
#define opm std::multiplies<int>()
using namespace std;


void solve() {
    map<char , double>m;
    map<string , char>mk;
    stack<char>st;
    int n;
    char cc='A';
    cin >> n; cin.ignore();
    string a[n];
    for (int i = 0; i < n; i++) {
        string name;
        int r;
        cin >> name >> r; cin.ignore();
        a[i] = name;
        m[cc] = r;
        mk[name] = cc;
        cc++;
    }

    string circuit ;
    getline(cin, circuit);
    for(int i = 0 ; i < n; i++){
        while (circuit.find(a[i]) != string::npos) {
            int x = circuit.find(a[i]);
            circuit.erase(circuit.find(a[i]), a[i].size() - 1);
            circuit[x] = mk[a[i]];
            //cout << circuit << ll;
        }
    }
   // cout << circuit<<ll;
    char c ='1';
    for(int i = 0 ; i < circuit.size() ; i++){
        if(circuit[i] != ')' && circuit[i] !=']' && circuit[i] !=' ') st.push(circuit[i]);
        else if(circuit[i] == ')'){
            double sum = 0;
                while (st.top() !='('){
                        sum += m[st.top()];
                        st.pop();
                }
            st.pop();
                st.push(c);
                m[c] = sum;
                c++;
        }
        else if(circuit[i] == ']'){
            double sum = 0;
            while (st.top() !='['){
                sum +=(1 /  m[st.top()]);
                st.pop();
            }
            st.pop();
            st.push(c);
            m[c] = (1 / sum);
            c++;
        }
    }
    cout <<fixed<<setprecision(1)<< m[st.top()]<<ll;

     }

int32_t main() {
    FAST
    int t = 1;
   // cin >> t;
    while(t--){
        solve();
    }
}
